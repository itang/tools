// Generated by ReScript, PLEASE EDIT WITH CARE


function push(dict, key, value) {
  let oldValue = dict[key];
  if (oldValue !== undefined) {
    oldValue.push(value);
  } else {
    dict[key] = [value];
  }
  return dict;
}

let DictWithArrayValue = {
  push: push
};

function fromQS(searchParams) {
  let dict = {};
  let entries = searchParams.entries();
  let arr = Array.from(entries);
  return arr.reduce((d, param) => push(d, param[0], param[1]), dict);
}

let URLSearchParamsOps = {
  fromQS: fromQS
};

function toObj0(url, tf) {
  return {
    protocol: url.protocol,
    host: url.host,
    port: url.port,
    pathname: url.pathname,
    searchParams: tf(url.searchParams),
    hash: url.hash
  };
}

function toObj(url, modeOpt) {
  let mode = modeOpt !== undefined ? modeOpt : "Qs";
  if (mode === "Qs") {
    return toObj0(url, fromQS);
  } else {
    return toObj0(url, prim => Object.fromEntries(prim));
  }
}

let UrlOps = {
  toObj: toObj
};

export {
  DictWithArrayValue,
  URLSearchParamsOps,
  UrlOps,
}
/* No side effect */
