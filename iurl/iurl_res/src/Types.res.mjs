// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";

function fromString(s) {
  switch (s) {
    case "qs" :
      return "Qs";
    case "qsl" :
      return "Qsl";
    default:
      return;
  }
}

let Mode = {
  fromString: fromString
};

function parseArgs(raw_args) {
  let args = raw_args.slice(2, raw_args.length);
  let ret = {
    mode: undefined,
    urls: []
  };
  let index = 0;
  while (index < args.length) {
    let curr = Core__Option.getOr(args[index], "");
    if (curr === "--mode" || curr === "-m") {
      ret.mode = Core__Option.flatMap(args[index + 1 | 0], fromString);
      index = index + 1 | 0;
    } else if (curr.startsWith("-")) {
      console.log("WARN: unknown " + curr);
    } else {
      ret.urls.push(curr);
    }
    index = index + 1 | 0;
  };
  return ret;
}

function setDefault(args, modeOpt, url) {
  let mode = modeOpt !== undefined ? modeOpt : "Qsl";
  if (args.mode === undefined) {
    args.mode = mode;
  }
  if (args.urls.length === 0) {
    args.urls.push(url);
  }
  return args;
}

let AppArgs = {
  parseArgs: parseArgs,
  setDefault: setDefault
};

export {
  Mode,
  AppArgs,
}
/* No side effect */
